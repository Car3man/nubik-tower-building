let _onFocusCallback;
let _onUnfocusCallback;

let _isFocus = false;

const setOnFocusCallback = (callback) => {
    _onFocusCallback = callback;
};

const setOnUnfocusCallback = (callback) => {
    _onUnfocusCallback = callback;
};

const _onFocus = () => {
    if (!_isFocus) {
        if (_onFocusCallback) {
            _onFocusCallback();
        }
        _isFocus = true;
    }
};

const _onUnfocus = () => {
    if (_isFocus) {
        if (_onUnfocusCallback) {
            _onUnfocusCallback();
        }
        _isFocus = false;
    }
};

try {
    document.addEventListener("visibilitychange", () => {
        if (document.hidden) {
            _onUnfocus();
        } else {
            _onFocus();
        }
    });
} catch {}

try {
    window.addEventListener("focus", _onFocus, false);
    window.addEventListener("blur", _onUnfocus, false);
} catch {}

try {
    window.attachEvent("focus", _onFocus);
    window.attachEvent("blur", _onUnfocus);
} catch {}

try {
    $(window).on("focusin", _onFocus).on("focusout", _onUnfocus);
} catch {}