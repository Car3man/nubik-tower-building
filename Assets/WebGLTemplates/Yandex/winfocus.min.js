let _onFocusCallback;
let _onUnfocusCallback;
let _firstFocusCaught = false;
let _isFocus = document.hasFocus();

const setOnFocusCallback = (callback) => {
    _onFocusCallback = callback;
};

const setOnUnfocusCallback = (callback) => {
    _onUnfocusCallback = callback;
};

const _onFocus = () => {
    if (_onFocusCallback) {
        _onFocusCallback();
    }
};

const _onUnfocus = () => {
    if (_onUnfocusCallback) {
        _onUnfocusCallback();
    }
};

const _checkFocus = () => {
    if (document.hasFocus() && !_firstFocusCaught) {
        _firstFocusCaught = true;
    }
    
    if (!_firstFocusCaught) {
        return;
    }
    
    if (document.hasFocus() && !_isFocus) {
        _isFocus = true;
        _onFocus();
    } else if (!document.hasFocus() && _isFocus) {
        _isFocus = false;
        _onUnfocus();
    }
};

try {
    document.addEventListener("visibilitychange", _checkFocus);
} catch {}

try {
    window.addEventListener("focus", _checkFocus, false);
    window.addEventListener("blur", _checkFocus, false);
} catch {}

try {
    document.addEventListener("focusin", _checkFocus, false);
    document.addEventListener("focusout", _checkFocus, false);
} catch {}

try {
    window.addEventListener("focus", _checkFocus, false);
    window.addEventListener("blur", _checkFocus, false);
} catch {}

try {
    window.addEventListener("focusin", _checkFocus, false);
    window.addEventListener("focusout", _checkFocus, false);
} catch {}